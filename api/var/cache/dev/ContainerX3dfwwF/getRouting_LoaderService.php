<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'routing.loader' shared service.

$a = ($this->privates['controller_name_converter'] ?? ($this->privates['controller_name_converter'] = new \Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser(($this->services['kernel'] ?? $this->get('kernel', 1)))));
$b = new \Symfony\Component\Config\Loader\LoaderResolver();

$c = new \Symfony\Component\HttpKernel\Config\FileLocator(($this->services['kernel'] ?? $this->get('kernel', 1)), '/app/src/Resources', array(0 => '/app/src'));
$d = new \FOS\RestBundle\Routing\Loader\RestRouteProcessor();
$e = ($this->privates['annotations.cached_reader'] ?? $this->getAnnotations_CachedReaderService());
$f = new \Symfony\Bundle\FrameworkBundle\Routing\AnnotatedRouteControllerLoader($e);

$b->addLoader(new \Symfony\Component\Routing\Loader\XmlFileLoader($c));
$b->addLoader(new \Symfony\Component\Routing\Loader\YamlFileLoader($c));
$b->addLoader(new \Symfony\Component\Routing\Loader\PhpFileLoader($c));
$b->addLoader(new \Symfony\Component\Routing\Loader\GlobFileLoader($c));
$b->addLoader(new \Symfony\Component\Routing\Loader\DirectoryLoader($c));
$b->addLoader(new \Symfony\Component\Routing\Loader\DependencyInjection\ServiceRouterLoader($this));
$b->addLoader(new \FOS\RestBundle\Routing\Loader\DirectoryRouteLoader($c, $d));
$b->addLoader(new \FOS\RestBundle\Routing\Loader\RestRouteLoader($this, $c, $a, new \FOS\RestBundle\Routing\Loader\Reader\RestControllerReader(new \FOS\RestBundle\Routing\Loader\Reader\RestActionReader($e, ($this->privates['fos_rest.request.param_fetcher.reader'] ?? $this->getFosRest_Request_ParamFetcher_ReaderService()), new \FOS\RestBundle\Inflector\DoctrineInflector(), true, array('json' => false, 'xml' => false, 'html' => true), true), $e), NULL));
$b->addLoader(new \FOS\RestBundle\Routing\Loader\RestYamlCollectionLoader($c, $d, true, array('json' => false, 'xml' => false, 'html' => true), NULL));
$b->addLoader(new \FOS\RestBundle\Routing\Loader\RestXmlCollectionLoader($c, $d, true, array('json' => false, 'xml' => false, 'html' => true), NULL));
$b->addLoader($f);
$b->addLoader(new \Symfony\Component\Routing\Loader\AnnotationDirectoryLoader($c, $f));
$b->addLoader(new \Symfony\Component\Routing\Loader\AnnotationFileLoader($c, $f));

return $this->services['routing.loader'] = new \Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader($a, $b, array('utf8' => true));
